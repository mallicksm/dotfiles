[core]
   editor = vim
   filemode = true                            # Tracks exec bits
   autocrlf = input                           # Deals CR/LF inconsistencies
   preloadindex = true                        # Caches indeix and makes git status faster
#  sharedrepository = 0660                    # Sets reasonable permissions
   pager = delta
[alias]
   di = difftool -y --tool tkdiff
   dm = difftool -y --tool meld
   dv = difftool -y --tool vimdiff
   dd = difftool --dir-diff -y --tool meld
   df = diff --name-status
   ci = commit
   co = checkout
   st = status --untracked-files=no --short
   url = remote set-url origin
   root = rev-parse --show-toplevel           # Shows root of current repo
   ls = log --format=format:'%C(bold blue)%h%C(red)\t%ad %C(green)%cn %C(red)%d %C(magenta)(a:%an)\n\t\t%C(cyan)-- %s%C(reset)\n' --decorate --graph --date=relative
   id = rev-parse --short HEAD
   br = rev-parse --abbrev-ref --short HEAD
   alias = config --get-regexp alias
   uncommit = reset --soft HEAD^                   # uncommits last commit and puts files in staging area
   llog = log --stat --graph
   # fzf diff
   dif = "!diff_fzf() { \
      git status --short | \
      fzf --preview-window 75% --preview '(git diff --color=always -- {-1} | sed 1,4d; cat {-1})'; \
   }; diff_fzf"
   # fzf switch branch
   sw = "!checkout_fzf() { \
      git branch -a --format '%(refname:short)' | sed 's~origin/~~' | grep -v HEAD | sort | uniq | \
      fzf  --height=60 --border-label=' All Branches ' --border-label-pos=4| xargs git checkout; \
   }; checkout_fzf"
   lsw = "!checkout_fzf() { \
      git branch --format '%(refname:short)' | sed 's~origin/~~' | grep -v HEAD | sort | uniq | \
      fzf --height=40 --border-label=' Local Branches ' --border-label-pos=4| xargs git checkout; \
   }; checkout_fzf"
   # fzf git log checkins
   cb = "!cb_fzf() { \
      git log --date=short --format='%cd %h%d %s (%an)' --graph | \
      fzf --preview-window 60% --preview '(grep -o \"[a-f0-9]\\{7,\\}\" <<< {} | xargs git show --color=always)'; \
   } ; cb_fzf"
   # Do a pull rebase and update submodules
   up = "!f() { \
     git pull -r;git submodule update --recursive --init; \
   }; f"
   # Update submodules
   sup = "!f() { \
     git submodule update --recursive --init; \
   }; f"
[color]
   ui = auto
   status = auto
   branch = auto
   diff = auto
   interactive = auto
[interactive]
   diffFilter = delta --color-only
[delta]
   navigate = true
   light = false      
   side-by-side = true
   line-numbers = true
[merge]
   conflictstyle = diff3
[diff]
   colorMoved = default
   tool = meld
[push]
   default = current
[pull]
	rebase = false
[init]
	defaultBranch = master
[credential "https://github.com"]
	helper = 
	helper = !/usr/bin/gh auth git-credential
[http]
	sslVerify = false
